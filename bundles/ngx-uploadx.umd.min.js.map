{"version":3,"sources":["ng://ngx-uploadx/lib/retry-handler.ts","node_modules/tslib/tslib.es6.js","ng://ngx-uploadx/lib/ajax.ts","ng://ngx-uploadx/lib/canceler.ts","ng://ngx-uploadx/lib/store.ts","ng://ngx-uploadx/lib/utils.ts","ng://ngx-uploadx/lib/uploader.ts","ng://ngx-uploadx/lib/tus.ts","ng://ngx-uploadx/lib/uploaderx.ts","ng://ngx-uploadx/lib/options.ts","ng://ngx-uploadx/lib/id.service.ts","ng://ngx-uploadx/lib/uploadx.service.ts","ng://ngx-uploadx/lib/uploadx.directive.ts","ng://ngx-uploadx/lib/uploadx-drop.directive.ts","ng://ngx-uploadx/lib/uploadx.module.ts"],"sourcesContent":["export enum ErrorType {\n  NotFound,\n  Auth,\n  Retryable,\n  Fatal\n}\n\nexport interface RetryConfig {\n  /** Maximum number of retry attempts */\n  maxAttempts?: number;\n  /** Upload not exist status codes */\n  shouldRestartCodes?: number[];\n  /** Bad token? status codes */\n  authErrorCodes?: number[];\n  /** Retryable 4xx status codes */\n  shouldRetryCodes?: number[];\n  minDelay?: number;\n  maxDelay?: number;\n}\n\nconst defaultRetryConfig: Required<RetryConfig> = {\n  maxAttempts: 8,\n  shouldRestartCodes: [404, 410],\n  authErrorCodes: [401],\n  shouldRetryCodes: [423, 429],\n  minDelay: 500,\n  maxDelay: 50000\n};\n\n/**\n * Retryable ErrorHandler\n */\nexport class RetryHandler {\n  public attempts = 0;\n  config: Required<RetryConfig>;\n  cancel: () => void = () => {};\n\n  constructor(configOptions: RetryConfig = {}) {\n    this.config = Object.assign({}, defaultRetryConfig, configOptions);\n  }\n\n  kind(code: number): ErrorType {\n    this.attempts++;\n    if (this.attempts > this.config.maxAttempts) {\n      return ErrorType.Fatal;\n    }\n    if (this.config.authErrorCodes.indexOf(code) !== -1) {\n      return ErrorType.Auth;\n    }\n    if (this.config.shouldRestartCodes.indexOf(code) !== -1) {\n      return ErrorType.NotFound;\n    }\n    if (code < 400 || code >= 500 || this.config.shouldRetryCodes.indexOf(code) !== -1) {\n      return ErrorType.Retryable;\n    }\n    return ErrorType.Fatal;\n  }\n\n  wait(): Promise<void> {\n    const ms =\n      Math.min(2 ** (this.attempts - 1) * this.config.minDelay, this.config.maxDelay) +\n      Math.floor(Math.random() * this.config.minDelay);\n    let id: ReturnType<typeof setTimeout>;\n    return new Promise(resolve => {\n      this.cancel = () => {\n        clearTimeout(id);\n        resolve();\n      };\n      id = setTimeout(this.cancel, ms);\n    });\n  }\n\n  reset(): void {\n    this.attempts = 0;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\nimport { RequestOptions } from './interfaces';\n\nexport interface AjaxRequestConfig extends RequestOptions {\n  // tslint:disable-next-line:no-any\n  [x: string]: any;\n\n  data?: BodyInit | null;\n  url: string;\n}\n\nexport interface AjaxResponse<T> {\n  data: T;\n  status: number;\n  headers: Record<string, string>;\n}\n\nexport interface Ajax {\n  request: <T = string>(config: AjaxRequestConfig) => Promise<AjaxResponse<T>>;\n}\n\nfunction createXhr(): XMLHttpRequest {\n  return new XMLHttpRequest();\n}\n\nfunction releaseXhr(xhr: unknown): void {\n  xhr = null;\n}\n\nexport class UploadxAjax {\n  constructor(private buildXhr: () => XMLHttpRequest) {}\n\n  request = <T = string>({\n    method = 'GET',\n    data = null,\n    headers = {},\n    url,\n    responseType,\n    canceler,\n    onUploadProgress,\n    withCredentials = false,\n    validateStatus = status => status < 400 && status >= 200\n  }: AjaxRequestConfig): Promise<AjaxResponse<T>> => {\n    const xhr = this.buildXhr();\n    canceler && (canceler.onCancel = () => xhr && xhr.readyState !== xhr.DONE && xhr.abort());\n    return new Promise((resolve, reject) => {\n      xhr.open(method, url, true);\n      withCredentials && (xhr.withCredentials = true);\n      responseType && (xhr.responseType = responseType);\n      responseType === 'json' && !headers.Accept && (headers.Accept = 'application/json');\n      Object.keys(headers).forEach(key => xhr.setRequestHeader(key, String(headers[key])));\n      xhr.upload.onprogress = onUploadProgress || null;\n      xhr.onerror = xhr.ontimeout = xhr.onabort = evt => {\n        releaseXhr(xhr);\n        return reject({ error: evt.type, url, method });\n      };\n      xhr.onload = () => {\n        const response = {\n          data: this.getResponseBody<T>(xhr, responseType === 'json'),\n          status: xhr.status,\n          headers: this.getResponseHeaders(xhr)\n        };\n        releaseXhr(xhr);\n        return validateStatus(response.status) ? resolve(response) : reject(response);\n      };\n      xhr.send(data);\n    });\n  };\n\n  getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n    const rows = xhr.getAllResponseHeaders().split(/[\\r\\n]+/);\n    return rows.reduce((headers: Record<string, string>, current) => {\n      const [name, value] = current.split(': ');\n      name && (headers[name.toLowerCase()] = value);\n      return headers;\n    }, {});\n  }\n\n  getResponseBody<T = string>(xhr: XMLHttpRequest, json?: boolean): T {\n    let body = 'response' in (xhr as XMLHttpRequest) ? xhr.response : xhr.responseText;\n    if (body && json && typeof body === 'string') {\n      try {\n        body = JSON.parse(body);\n      } catch {}\n    }\n    return body;\n  }\n}\n\nexport const UPLOADX_AJAX: InjectionToken<Ajax> = new InjectionToken('uploadx.ajax', {\n  factory: () => new UploadxAjax(createXhr),\n  providedIn: 'root'\n});\n","export class Canceler {\n  onCancel = () => {};\n\n  cancel(): void {\n    this.onCancel();\n    this.onCancel = () => {};\n  }\n}\n","class Store {\n  prefix = 'UPLOADX-V3.0-';\n\n  set(key: string, value: string): void {\n    localStorage.setItem(this.prefix + key, value);\n  }\n\n  get(key: string): string | null {\n    return localStorage.getItem(this.prefix + key);\n  }\n\n  delete(key: string): void {\n    localStorage.removeItem(this.prefix + key);\n  }\n}\n\nexport const store =\n  typeof window !== 'undefined' && 'localStorage' in window\n    ? new Store()\n    : new Map<string, string>();\n","// tslint:disable: no-bitwise\n\nimport { Primitive } from './interfaces';\n\nfunction safeMatch(base: string, re: RegExp): string {\n  return (base.match(re) || [])[0] || '';\n}\n\nexport function resolveUrl(url: string, base: string): string {\n  if (url.indexOf('https://') * url.indexOf('http://') === 0) {\n    return url;\n  }\n  if (url.indexOf('//') === 0) {\n    return safeMatch(base, /^(https?:)/) + url;\n  }\n  if (url.indexOf('/') === 0) {\n    return safeMatch(base, /^(?:https?:)?(?:\\/\\/)?([^\\/\\?]+)/) + url;\n  }\n  return safeMatch(base, /^(?:https?:)?(?:\\/\\/)?([^\\/\\?]+)?(.*\\/)/) + url;\n}\n\nexport function unfunc<T, V>(value: T | ((ref: V) => T), ref: V): T {\n  return value instanceof Function ? value(ref) : value;\n}\n\nexport const pick = <T, K extends keyof T>(obj: T, whitelist: K[]): Pick<T, K> => {\n  const result = {} as Pick<T, K>;\n  whitelist.forEach(key => (result[key] = obj[key]));\n  return result;\n};\n\nexport function isNumber(x?: number): x is number {\n  return x === Number(x);\n}\n\n/**\n * 32-bit FNV-1a hash function\n */\nexport function createHash(str: string): number {\n  let hash = 2166136261;\n  const len = str.length;\n  for (let i = 0; i < len; i++) {\n    hash ^= str.charCodeAt(i);\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n  return hash >>> 0;\n}\n\nexport const b64 = {\n  encode: (str: string) =>\n    btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) =>\n        String.fromCharCode(Number.parseInt(p1, 16))\n      )\n    ),\n  decode: (str: string) =>\n    decodeURIComponent(\n      atob(str)\n        .split('')\n        .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n        .join('')\n    ),\n  serialize: (obj: Record<string, Primitive | Primitive[]>) =>\n    Object.keys(obj)\n      .map(key => `${key} ${b64.encode(String(obj[key]))}`)\n      .toString(),\n\n  parse: (encoded: string) => {\n    const kvPairs = encoded.split(',').map(kv => kv.split(' '));\n    const decoded: Record<string, string> = Object.create(null);\n    for (const [key, value] of kvPairs) {\n      decoded[key] = b64.decode(value);\n    }\n    return decoded;\n  }\n};\n\n/**\n * Adaptive chunk size\n */\nexport class DynamicChunk {\n  /** Maximum chunk size in bytes */\n  static maxSize = Number.MAX_SAFE_INTEGER;\n  /** Minimum chunk size in bytes */\n  static minSize = 1024 * 256;\n  /** Initial chunk size in bytes */\n  static size = 4096 * 256;\n  static minChunkTime = 2;\n  static maxChunkTime = 8;\n\n  static scale(throughput: number): number {\n    const elapsedTime = DynamicChunk.size / throughput;\n    if (elapsedTime < DynamicChunk.minChunkTime) {\n      DynamicChunk.size = Math.min(DynamicChunk.maxSize, DynamicChunk.size * 2);\n    }\n    if (elapsedTime > DynamicChunk.maxChunkTime) {\n      DynamicChunk.size = Math.max(DynamicChunk.minSize, DynamicChunk.size / 2);\n    }\n    return DynamicChunk.size;\n  }\n}\n","import { Ajax, AjaxRequestConfig } from './ajax';\nimport { Canceler } from './canceler';\nimport {\n  AuthorizeRequest,\n  Metadata,\n  PreRequest,\n  RequestConfig,\n  RequestHeaders,\n  RequestOptions,\n  ResponseBody,\n  UploadAction,\n  UploaderOptions,\n  UploadState,\n  UploadStatus,\n  UploadxControlEvent\n} from './interfaces';\nimport { ErrorType, RetryHandler } from './retry-handler';\nimport { store } from './store';\nimport { DynamicChunk, isNumber, unfunc } from './utils';\n\nconst actionToStatusMap: { [K in UploadAction]: UploadStatus } = {\n  pause: 'paused',\n  upload: 'queue',\n  cancel: 'cancelled'\n};\n\n/**\n * Uploader Base Class\n */\nexport abstract class Uploader implements UploadState {\n  name: string;\n  readonly size: number;\n  readonly uploadId!: string;\n  response: ResponseBody = null;\n  responseStatus = 0;\n  responseHeaders: Record<string, string> = {};\n  progress!: number;\n  remaining!: number;\n  speed!: number;\n  /** Custom headers */\n  headers: RequestHeaders = {};\n  /** Metadata Object */\n  metadata: Metadata;\n  /** Upload endpoint */\n  endpoint = '/upload';\n  /** Chunk size in bytes */\n  chunkSize: number;\n  /** Auth token/tokenGetter */\n  token: UploadxControlEvent['token'];\n  /** Byte offset within the whole file */\n  offset? = 0;\n  /** Retries handler */\n  retry: RetryHandler;\n  canceler = new Canceler();\n  /** Set HttpRequest responseType */\n  protected responseType?: 'json' | 'text';\n  private readonly _authorize: AuthorizeRequest;\n  private readonly _prerequest: PreRequest;\n  private startTime!: number;\n  private _token!: string;\n  private _url = '';\n\n  get url(): string {\n    return this._url || store.get(this.uploadId) || '';\n  }\n\n  set url(value: string) {\n    this._url !== value && store.set(this.uploadId, value);\n    this._url = value;\n  }\n\n  private _status!: UploadStatus;\n\n  get status(): UploadStatus {\n    return this._status;\n  }\n\n  set status(s: UploadStatus) {\n    if (this._status === 'cancelled' || (this._status === 'complete' && s !== 'cancelled')) {\n      return;\n    }\n    if (s !== this._status) {\n      this.status === 'retry' && this.retry.cancel();\n      this._status = s;\n      s === 'paused' && this.abort();\n      ['cancelled', 'complete', 'error'].indexOf(s) !== -1 && this.cleanup();\n      s === 'cancelled' ? this.cancel() : this.stateChange(this);\n    }\n  }\n\n  constructor(\n    readonly file: File,\n    readonly options: Readonly<UploaderOptions>,\n    readonly stateChange: (evt: UploadState) => void,\n    readonly ajax: Ajax\n  ) {\n    this.retry = new RetryHandler(options.retryConfig);\n    this.name = file.name;\n    this.size = file.size;\n    this.metadata = {\n      name: file.name,\n      mimeType: file.type || 'application/octet-stream',\n      size: file.size,\n      lastModified:\n        file.lastModified || (file as File & { lastModifiedDate: Date }).lastModifiedDate.getTime()\n    };\n    this.chunkSize = options.chunkSize || this.size;\n    this._prerequest = options.prerequest || (req => req);\n    this._authorize = options.authorize || (req => req);\n    this.configure(options);\n  }\n\n  /**\n   * Configure uploader\n   */\n  configure({ metadata, headers, token, endpoint, action }: UploadxControlEvent): void {\n    endpoint && (this.endpoint = endpoint);\n    token && (this.token = token);\n    metadata && Object.assign(this.metadata, unfunc(metadata, this.file));\n    headers && Object.assign(this.headers, unfunc(headers, this.file));\n    action && (this.status = actionToStatusMap[action]);\n  }\n\n  /**\n   * Starts uploading\n   */\n  async upload(): Promise<void> {\n    this._status = 'uploading';\n    this.startTime = new Date().getTime();\n    await this.updateToken();\n    while (this.status === 'uploading' || this.status === 'retry') {\n      this.status = 'uploading';\n      try {\n        this.url = this.url || (await this.getFileUrl());\n        this.offset = isNumber(this.offset) ? await this.sendFileContent() : await this.getOffset();\n        this.retry.reset();\n        if (this.offset === this.size) {\n          this.remaining = 0;\n          this.progress = 100;\n          this.status = 'complete';\n        }\n      } catch (e) {\n        e instanceof Error && console.error(e);\n        if (this.status !== 'uploading') {\n          return;\n        }\n        switch (this.retry.kind(this.responseStatus)) {\n          case ErrorType.Fatal:\n            this.status = 'error';\n            return;\n          case ErrorType.NotFound:\n            this.url = '';\n            break;\n          case ErrorType.Auth:\n            await this.updateToken();\n            break;\n          default:\n            this.responseStatus >= 400 && (this.offset = undefined);\n            this.status = 'retry';\n            await this.retry.wait();\n        }\n      }\n    }\n  }\n\n  /**\n   * Performs http requests\n   */\n  async request(requestOptions: RequestOptions): Promise<void> {\n    this.responseStatus = 0;\n    this.response = null;\n    this.responseHeaders = {};\n    let req: RequestConfig = {\n      body: requestOptions.body || null,\n      canceler: this.canceler,\n      headers: { ...this.headers, ...requestOptions.headers },\n      method: requestOptions.method || 'GET',\n      url: requestOptions.url || this.url\n    };\n    req = await this._authorize(req, this._token);\n    const { body = null, headers, method, url = req.url } = (await this._prerequest(req)) || req;\n    const ajaxRequestConfig: AjaxRequestConfig = {\n      method,\n      headers: { ...req.headers, ...headers },\n      url,\n      data: body,\n      responseType: this.responseType,\n      withCredentials: !!this.options.withCredentials,\n      canceler: this.canceler,\n      validateStatus: () => true\n    };\n    if (body && typeof body !== 'string') {\n      ajaxRequestConfig.onUploadProgress = this.onProgress();\n    }\n    const response = await this.ajax.request(ajaxRequestConfig);\n    this.response = response.data;\n    this.responseHeaders = response.headers;\n    this.responseStatus = response.status;\n    if (response.status >= 400) {\n      return Promise.reject();\n    }\n  }\n\n  /**\n   * Set auth token cache\n   */\n  updateToken = async (): Promise<string | void> => {\n    this._token = await unfunc(this.token || '', this.responseStatus);\n  };\n\n  /**\n   * Get file URI\n   */\n  protected abstract getFileUrl(): Promise<string>;\n\n  /**\n   * Send file content and return an offset for the next request\n   */\n  protected abstract sendFileContent(): Promise<number | undefined>;\n\n  /**\n   * Get an offset for the next request\n   */\n  protected abstract getOffset(): Promise<number | undefined>;\n\n  protected abort(): void {\n    this.offset = undefined;\n    this.canceler.cancel();\n  }\n\n  protected async cancel(): Promise<void> {\n    this.abort();\n    if (this.url) {\n      await this.request({ method: 'DELETE' }).catch(() => {});\n    }\n    this.stateChange(this);\n  }\n\n  /**\n   * Gets the value from the response\n   */\n  protected getValueFromResponse(key: string): string | null {\n    return this.responseHeaders[key.toLowerCase()] || null;\n  }\n\n  protected getChunk(): { start: number; end: number; body: Blob } {\n    this.chunkSize = isNumber(this.options.chunkSize) ? this.chunkSize : DynamicChunk.size;\n    const start = this.offset || 0;\n    const end = Math.min(start + this.chunkSize, this.size);\n    const body = this.file.slice(this.offset, end);\n    return { start, end, body };\n  }\n\n  private cleanup = () => store.delete(this.uploadId);\n\n  private onProgress(): (evt: ProgressEvent) => void {\n    let throttle: ReturnType<typeof setTimeout> | undefined;\n    return ({ loaded }) => {\n      const now = new Date().getTime();\n      const uploaded = (this.offset as number) + loaded;\n      const elapsedTime = (now - this.startTime) / 1000;\n      this.speed = Math.round(uploaded / elapsedTime);\n      DynamicChunk.scale(this.speed);\n      if (!throttle) {\n        throttle = setTimeout(() => (throttle = undefined), 500);\n        this.progress = +((uploaded / this.size) * 100).toFixed(2);\n        this.remaining = Math.ceil((this.size - uploaded) / this.speed);\n        this.stateChange(this);\n      }\n    };\n  }\n}\n","import { Uploader } from './uploader';\nimport { b64, resolveUrl } from './utils';\n\n/**\n * Implements tus resumable upload protocol\n *\n * {@link https://github.com/tus/tus-resumable-upload-protocol/blob/master/protocol.md|Github}\n */\nexport class Tus extends Uploader {\n  headers = { 'Tus-Resumable': '1.0.0' };\n\n  async getFileUrl(): Promise<string> {\n    const encodedMetaData = b64.serialize(this.metadata);\n    const headers = {\n      'Upload-Length': `${this.size}`,\n      'Upload-Metadata': `${encodedMetaData}`\n    };\n    await this.request({ method: 'POST', url: this.endpoint, headers });\n    const location = this.getValueFromResponse('location');\n    if (!location) {\n      throw new Error('Invalid or missing Location header');\n    }\n    this.offset = this.responseStatus === 201 ? 0 : undefined;\n    return resolveUrl(location, this.endpoint);\n  }\n\n  async sendFileContent(): Promise<number | undefined> {\n    const { body } = this.getChunk();\n    const headers = {\n      'Content-Type': 'application/offset+octet-stream',\n      'Upload-Offset': `${this.offset}`\n    };\n    await this.request({ method: 'PATCH', body, headers });\n    return this.getOffsetFromResponse();\n  }\n\n  async getOffset(): Promise<number | undefined> {\n    await this.request({ method: 'HEAD' });\n    return this.getOffsetFromResponse();\n  }\n\n  protected getOffsetFromResponse(): number | undefined {\n    const offsetStr = this.getValueFromResponse('Upload-Offset');\n    return offsetStr ? parseInt(offsetStr, 10) : undefined;\n  }\n}\n","import { Uploader } from './uploader';\nimport { resolveUrl } from './utils';\n\n/**\n * Implements XHR/CORS Resumable Upload\n *\n * {@link https://github.com/kukhariev/node-uploadx/blob/master/proto.md|Github}\n * @see {@link https://developers.google.com/drive/api/v3/manage-uploads#resumable|Google Drive API documentation}\n */\nexport class UploaderX extends Uploader {\n  responseType = 'json' as 'json';\n\n  async getFileUrl(): Promise<string> {\n    const headers = {\n      'Content-Type': 'application/json; charset=utf-8',\n      'X-Upload-Content-Length': this.size.toString(),\n      'X-Upload-Content-Type': this.file.type || 'application/octet-stream'\n    };\n    await this.request({\n      method: 'POST',\n      body: JSON.stringify(this.metadata),\n      url: this.endpoint,\n      headers\n    });\n    const location = this.getValueFromResponse('location');\n    if (!location) {\n      throw new Error('Invalid or missing Location header');\n    }\n    this.offset = this.responseStatus === 201 ? 0 : undefined;\n    return resolveUrl(location, this.endpoint);\n  }\n\n  async sendFileContent(): Promise<number | undefined> {\n    const { end, body } = this.getChunk();\n    const headers = {\n      'Content-Type': 'application/octet-stream',\n      'Content-Range': `bytes ${this.offset}-${end - 1}/${this.size}`\n    };\n    await this.request({ method: 'PUT', body, headers });\n    return this.getOffsetFromResponse();\n  }\n\n  async getOffset(): Promise<number | undefined> {\n    const headers = {\n      'Content-Type': 'application/octet-stream',\n      'Content-Range': `bytes */${this.size}`\n    };\n    await this.request({ method: 'PUT', headers });\n    return this.getOffsetFromResponse();\n  }\n\n  protected getOffsetFromResponse(): number | undefined {\n    if (this.responseStatus > 201) {\n      const range = this.getValueFromResponse('Range');\n      return range ? getRangeEnd(range) + 1 : undefined;\n    }\n    return this.size;\n  }\n}\n\nexport function getRangeEnd(range = ''): number {\n  const end = parseInt(range.split(/-/)[1], 10);\n  return end >= 0 ? end : -1;\n}\n","import { InjectionToken } from '@angular/core';\nimport { AuthorizeRequest, UploaderClass, UploaderOptions } from './interfaces';\nimport { UploaderX } from './uploaderx';\n\n/**\n * Global Module Options\n */\nexport interface UploadxOptions extends UploaderOptions {\n  /**\n   * Provide a user-defined class to support another upload protocol or to extend an existing one.\n   * @defaultValue UploadX\n   */\n  uploaderClass?: UploaderClass;\n  /**\n   * Set the maximum parallel uploads\n   * @defaultValue 2\n   */\n  concurrency?: number;\n  /**\n   * Automatically start upload when files added\n   * @defaultValue true\n   */\n  autoUpload?: boolean;\n  /**\n   * File types the user can pick from the file input\n   */\n  allowedTypes?: string;\n  /**\n   * Add 'multiple' attribute\n   * @defaultValue true\n   */\n  multiple?: boolean;\n}\n\nexport interface UploadxFactoryOptions extends UploadxOptions {\n  endpoint: string;\n  autoUpload: boolean;\n  concurrency: number;\n  uploaderClass: UploaderClass;\n  authorize: AuthorizeRequest;\n}\n\nconst defaultOptions: UploadxFactoryOptions = {\n  endpoint: '/upload',\n  autoUpload: true,\n  concurrency: 2,\n  uploaderClass: UploaderX,\n  authorize: (req, token) => {\n    token && (req.headers.Authorization = `Bearer ${token}`);\n    return req;\n  }\n};\n\nexport const UPLOADX_FACTORY_OPTIONS = new InjectionToken<UploadxFactoryOptions>(\n  'uploadx.factory.options',\n  { providedIn: 'root', factory: () => defaultOptions }\n);\nexport const UPLOADX_OPTIONS = new InjectionToken<UploadxOptions>('uploadx.options');\n","import { Injectable } from '@angular/core';\nimport { Uploader } from './uploader';\nimport { createHash } from './utils';\n\nexport interface UidService {\n  generateId(uploader: Uploader): Promise<string> | string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdService implements UidService {\n  generateId(uploader: Uploader): Promise<string> | string {\n    const print = JSON.stringify({\n      ...uploader.metadata,\n      type: uploader.constructor.name,\n      endpoint: uploader.endpoint\n    });\n    return createHash(print).toString(16);\n  }\n}\n","import { Inject, Injectable, NgZone, OnDestroy, Optional } from '@angular/core';\nimport { fromEvent, Observable, Subject, Subscription } from 'rxjs';\nimport { debounceTime, map, startWith } from 'rxjs/operators';\nimport { Ajax, AjaxRequestConfig, AjaxResponse, UPLOADX_AJAX } from './ajax';\nimport { IdService } from './id.service';\nimport { UploadState, UploadxControlEvent, Writable } from './interfaces';\nimport {\n  UPLOADX_FACTORY_OPTIONS,\n  UPLOADX_OPTIONS,\n  UploadxFactoryOptions,\n  UploadxOptions\n} from './options';\nimport { Uploader } from './uploader';\nimport { pick } from './utils';\n\nconst stateKeys: Array<keyof UploadState> = [\n  'file',\n  'name',\n  'progress',\n  'remaining',\n  'response',\n  'responseHeaders',\n  'responseStatus',\n  'size',\n  'speed',\n  'status',\n  'uploadId',\n  'url'\n];\n\nconst DUE_TIME = 5;\n\n@Injectable({ providedIn: 'root' })\nexport class UploadxService implements OnDestroy {\n  /** Upload Queue */\n  queue: Uploader[] = [];\n  options: UploadxFactoryOptions;\n  private readonly eventsStream: Subject<UploadState> = new Subject();\n  private subs: Subscription[] = [];\n\n  /** Upload status events */\n  get events(): Observable<UploadState> {\n    return this.eventsStream.asObservable();\n  }\n\n  constructor(\n    @Optional() @Inject(UPLOADX_OPTIONS) options: UploadxOptions | null,\n    @Inject(UPLOADX_FACTORY_OPTIONS) defaults: UploadxFactoryOptions,\n    @Inject(UPLOADX_AJAX) readonly ajax: Ajax,\n    private ngZone: NgZone,\n    private idService: IdService\n  ) {\n    this.options = Object.assign({}, defaults, options);\n    if (typeof window !== 'undefined') {\n      this.subs.push(\n        fromEvent(window, 'online').subscribe(() => this.control({ action: 'upload' })),\n        fromEvent(window, 'offline').subscribe(() => this.control({ action: 'pause' }))\n      );\n    }\n  }\n\n  /**\n   * Initializes service\n   * @param options global module options\n   * @returns Observable that emits a new value on progress or status changes\n   */\n  init(options: UploadxOptions = {}): Observable<UploadState> {\n    Object.assign(this.options, options);\n    return this.events;\n  }\n\n  /**\n   * Initializes service\n   * @param options global module options\n   * @returns Observable that emits the current array of uploaders\n   */\n  connect(options?: UploadxOptions): Observable<Uploader[]> {\n    return this.init(options).pipe(\n      startWith(null),\n      map(() => this.queue),\n      debounceTime(DUE_TIME)\n    );\n  }\n\n  /**\n   * Terminates all uploads and clears the queue\n   */\n  disconnect(): void {\n    this.queue.forEach(uploader => (uploader.status = 'paused'));\n    this.queue = [];\n  }\n\n  ngOnDestroy(): void {\n    this.disconnect();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Creates uploaders for files and adds them to the upload queue\n   */\n  handleFiles(files: FileList | File | File[], options = {} as UploadxOptions): void {\n    const instanceOptions: UploadxFactoryOptions = { ...this.options, ...options };\n    this.options.concurrency = instanceOptions.concurrency;\n    ('name' in files ? [files] : Array.from(files)).forEach(file =>\n      this.addUploaderInstance(file, instanceOptions)\n    );\n  }\n\n  /**\n   * Upload control\n   * @example\n   * // pause all\n   * this.uploadService.control({ action: 'pause' });\n   * // pause upload with uploadId\n   * this.uploadService.control({ action: 'pause', uploadId});\n   * // set token\n   * this.uploadService.control({ token: `TOKEN` });\n   */\n  control(evt: UploadxControlEvent): void {\n    const target = evt.uploadId\n      ? this.queue.filter(({ uploadId }) => uploadId === evt.uploadId)\n      : this.queue;\n    target.forEach(uploader => uploader.configure(evt));\n  }\n\n  /**\n   * Returns number of active uploads\n   */\n  runningProcess(): number {\n    return this.queue.filter(({ status }) => status === 'uploading' || status === 'retry').length;\n  }\n\n  /**\n   * Performs http requests\n   */\n  async request<T = string>(config: AjaxRequestConfig): Promise<AjaxResponse<T>> {\n    config.data = config.body ? config.body : config.data;\n    return this.ajax.request(config);\n  }\n\n  private stateChange = (evt: UploadState) => {\n    this.ngZone.run(() => this.eventsStream.next(pick(evt, stateKeys)));\n    if (evt.status !== 'uploading' && evt.status !== 'added') {\n      this.ngZone.runOutsideAngular(() => setTimeout(() => this.processQueue()));\n    }\n  };\n\n  private async addUploaderInstance(file: File, options: UploadxFactoryOptions): Promise<void> {\n    const uploader = new options.uploaderClass(file, options, this.stateChange, this.ajax);\n    (uploader.uploadId as Writable<string>) = await this.idService.generateId(uploader);\n    this.queue.push(uploader);\n    uploader.status = options.autoUpload && onLine() ? 'queue' : 'added';\n  }\n\n  private processQueue(): void {\n    this.queue = this.queue.filter(({ status }) => status !== 'cancelled');\n    this.queue\n      .filter(({ status }) => status === 'queue')\n      .slice(0, Math.max(this.options.concurrency - this.runningProcess(), 0))\n      .forEach(uploader => uploader.upload());\n  }\n}\n\nfunction onLine(): boolean {\n  return typeof window !== 'undefined' ? window.navigator.onLine : true;\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport { takeWhile } from 'rxjs/operators';\nimport { UploadState, UploadxControlEvent } from './interfaces';\nimport { UploadxOptions } from './options';\nimport { UploadxService } from './uploadx.service';\n\n@Directive({ selector: '[uploadx]' })\nexport class UploadxDirective implements OnInit {\n  @Input()\n  set uploadx(value: UploadxOptions | '') {\n    if (value) {\n      this.options = value;\n    }\n  }\n\n  @Input() options: UploadxOptions = {};\n\n  @Input() set control(value: UploadxControlEvent | '') {\n    if (value) {\n      this.uploadService.control(value);\n    }\n  }\n\n  @Output() state = new EventEmitter<UploadState>();\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private uploadService: UploadxService\n  ) {}\n\n  ngOnInit(): void {\n    const { multiple, allowedTypes } = this.options;\n    multiple !== false && this.renderer.setAttribute(this.elementRef.nativeElement, 'multiple', '');\n    allowedTypes &&\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'accept', allowedTypes);\n\n    this.uploadService.events\n      .pipe(takeWhile(_ => this.state.observers.length > 0))\n      .subscribe(this.state);\n  }\n\n  @HostListener('change', ['$event.target.files'])\n  fileListener(files: FileList): void {\n    if (files && files.item(0)) {\n      this.uploadService.handleFiles(files, this.options);\n    }\n  }\n}\n","import { ContentChild, Directive, HostBinding, HostListener } from '@angular/core';\nimport { UploadxDirective } from './uploadx.directive';\nimport { UploadxService } from './uploadx.service';\n\n@Directive({ selector: '[uploadxDrop]' })\nexport class UploadxDropDirective {\n  @HostBinding('class.uploadx-drop-active')\n  active = false;\n\n  @ContentChild(UploadxDirective)\n  fileInput?: UploadxDirective;\n\n  constructor(private uploadService: UploadxService) {}\n\n  @HostListener('drop', ['$event'])\n  dropHandler(event: DragEvent): void {\n    if (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.item(0)) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.active = false;\n      this.fileInput\n        ? this.fileInput.fileListener(event.dataTransfer.files)\n        : this.uploadService.handleFiles(event.dataTransfer.files);\n    }\n  }\n\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: DragEvent): void {\n    if (event.dataTransfer && event.dataTransfer.files) {\n      event.dataTransfer.dropEffect = 'copy';\n      event.stopPropagation();\n      event.preventDefault();\n      this.active = true;\n    }\n  }\n\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: DragEvent): void {\n    this.active = false;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { UPLOADX_OPTIONS, UploadxOptions } from './options';\nimport { UploadxDropDirective } from './uploadx-drop.directive';\nimport { UploadxDirective } from './uploadx.directive';\n\n@NgModule({\n  declarations: [UploadxDirective, UploadxDropDirective],\n  exports: [UploadxDirective, UploadxDropDirective]\n})\nexport class UploadxModule {\n  static withConfig(options: UploadxOptions): ModuleWithProviders<UploadxModule> {\n    return {\n      ngModule: UploadxModule,\n      providers: [{ provide: UPLOADX_OPTIONS, useValue: options }]\n    };\n  }\n}\n"],"names":["NotFound","Auth","Retryable","Fatal","defaultRetryConfig","maxAttempts","shouldRestartCodes","authErrorCodes","shouldRetryCodes","minDelay","maxDelay","RetryHandler","prototype","kind","code","this","attempts","config","ErrorType","indexOf","wait","id","_this","ms","Math","min","pow","floor","random","Promise","resolve","cancel","clearTimeout","setTimeout","reset","configOptions","Object","assign","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","_","label","sent","trys","ops","g","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","createXhr","XMLHttpRequest","UploadxAjax","getResponseHeaders","xhr","getAllResponseHeaders","split","reduce","headers","current","_a","name","toLowerCase","getResponseBody","json","response","responseText","JSON","parse","buildXhr","request","_b","method","_c","data","_d","url","responseType","canceler","onUploadProgress","_e","withCredentials","_f","validateStatus","onCancel","readyState","DONE","abort","open","Accept","keys","forEach","key","setRequestHeader","String","upload","onprogress","onerror","ontimeout","onabort","evt","type","onload","status","send","UPLOADX_AJAX","InjectionToken","factory","providedIn","Canceler","Store","set","localStorage","setItem","prefix","get","getItem","delete","removeItem","store","window","Map","safeMatch","base","re","match","resolveUrl","unfunc","ref","Function","pick","obj","whitelist","isNumber","x","Number","createHash","str","hash","len","charCodeAt","b64","encode","btoa","encodeURIComponent","replace","p1","fromCharCode","parseInt","decode","decodeURIComponent","atob","map","c","toString","slice","join","serialize","encoded","kvPairs","kv","decoded","kvPairs_1","tslib_1.__values","kvPairs_1_1","DynamicChunk","scale","throughput","elapsedTime","size","minChunkTime","maxSize","maxChunkTime","max","minSize","MAX_SAFE_INTEGER","actionToStatusMap","pause","defineProperty","Uploader","_url","uploadId","_status","retry","cleanup","stateChange","configure","metadata","token","endpoint","action","file","startTime","Date","getTime","updateToken","getFileUrl","offset","sendFileContent","getOffset","remaining","progress","Error","console","e_1","responseStatus","undefined","requestOptions","responseHeaders","req","_authorize","_token","_prerequest","ajaxRequestConfig","options","onProgress","ajax","catch","getValueFromResponse","getChunk","chunkSize","start","end","throttle","loaded","now","uploaded","speed","round","toFixed","ceil","retryConfig","mimeType","lastModified","lastModifiedDate","prerequest","authorize","tslib_1.__extends","Tus","encodedMetaData","Upload-Length","Upload-Metadata","location","Content-Type","Upload-Offset","getOffsetFromResponse","offsetStr","_super","Tus-Resumable","UploaderX","X-Upload-Content-Length","X-Upload-Content-Type","stringify","Content-Range","range","getRangeEnd","defaultOptions","autoUpload","concurrency","uploaderClass","Authorization","UPLOADX_FACTORY_OPTIONS","UPLOADX_OPTIONS","IdService","generateId","uploader","Injectable","args","stateKeys","UploadxService","eventsStream","asObservable","init","events","connect","pipe","startWith","queue","debounceTime","disconnect","ngOnDestroy","subs","sub","unsubscribe","handleFiles","files","instanceOptions","from","addUploaderInstance","control","filter","runningProcess","idService","navigator","onLine","processQueue","Optional","Inject","NgZone","defaults","ngZone","Subject","run","runOutsideAngular","fromEvent","subscribe","UploadxDirective","uploadService","ngOnInit","multiple","allowedTypes","renderer","setAttribute","elementRef","nativeElement","takeWhile","state","observers","fileListener","item","Directive","selector","ElementRef","Renderer2","Input","Output","HostListener","EventEmitter","UploadxDropDirective","dropHandler","event","dataTransfer","stopPropagation","preventDefault","active","fileInput","onDragOver","dropEffect","onDragLeave","HostBinding","ContentChild","UploadxModule","withConfig","ngModule","providers","provide","useValue","NgModule","declarations","exports"],"mappings":"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"}